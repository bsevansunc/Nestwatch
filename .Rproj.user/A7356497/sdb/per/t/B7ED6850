{
    "collab_server" : "",
    "contents" : "---\noutput:\n html_document:\n  theme: yeti\n---\n\n<head>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n\n<style>\n\ncode{\n  background-color:#f2f2f2;\n  border-radius: 25px;\n}\n \nspan.co{\n  color:#000080;\n  font-weight: bold;\n}\n \nimg{\n  display: block;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nh4{\n  text-align: left;\n  font-size: 20px;\n}\n\np{\n  text-align: left;\n  font-size: 16px;\n}\n\nul, ol{\n  line-height: 27px;\n  text-align: left;\n  font-size: 16px;\n  margin-left: 0px;\n}\n \nblockquote{\n  font-size: 18px;\n  border-left: 8px solid #292093;\n  background-color: #e6ffff;\n  padding-left: 16px;\n  padding-right: 16px;\n}\n \n.row{\n  margin: auto;\n}\n \ntable {\n  border-collapse: collapse;\n}\n\ntable, td, th {\n  border: 1px solid black;\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n \n /* Create two equal columns that floats next to each other */\n.column {\n  float: left;\n  width: 50%;\n  padding: 10px;\n}\n\n/* Clear floats after the columns */\n.row:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n.roundBorder {\n  border-radius: 25px;\n  border: 5px solid #30288C;\n  background: #D6EAF8;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n.roundBorderBlack {\n  border-radius: 25px;\n  border: 10px solid #D3D3D3;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n.roundBorderBlackEx {\n  border-radius: 5px;\n  border: 5px solid #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  padding-top: 2px;\n}\n\n.roundBorderEx {\n  border-radius: 3px;\n  border: 5px solid #30288C;\n  background: #D6EAF8;\n  padding-left: 5px;\n  padding-right: 5px;\n  padding-top: 2px;\n}\n\n.tt {\n    position: relative;\n    display: inline-block;\n    class: inline; \n    font-weight: bold;\n    font-family: \"Avenir\";\n    font-size: 18px;\n    border-bottom: 1px black;\n}\n\n/* Tooltip text */\n.tt .ttText {\n    visibility: hidden;\n    font-weight: normal;\n    font-size: 18px;\n    width: 200px;\n    background-color: black;\n    border: 1px solid black;\n    color: white;\n    text-align: left;\n    padding: 5px;\n    border-radius: 6px;\n    position: absolute;\n    z-index: 1;\n}\n\n/* Show the tooltip text when you mouse over the tooltip container */\n.tt:hover .ttText {\n    visibility: visible;\n}\n\n</style>\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(knitr) ; library(kableExtra)\n\noptions(knitr.table.format = \"html\")\n\n# set up ------------------------------------------------------------------\n\nlibrary(tidyverse)\n\n\n# functions ---------------------------------------------------------------\n\n# Function to add region to a plot (based on siteId field):\n\naddRegion <- function(x){\n  xState <- str_sub(x, start = -3, end = -2)\n  case_when(\n    xState == 'GA' ~ 'Atlanta',\n    xState == 'CO' ~ 'Colorado',\n    xState == 'FL' ~ 'Gainesville',\n    xState == 'NC' ~ 'Raleigh',\n    xState == 'PA' ~ 'Pittsburgh',\n    xState == 'MA' ~ 'Springfield',\n    xState %in% c('MD','DC', 'VA') ~ 'Washington, DC',\n    TRUE ~ 'noData'\n  )\n}\n\n# Outlier functions:\n\n\noutlierBottom <- function(x){\n  median(x) - 2.5*mad(x)\n}\n\noutlierTop <- function(x){\n  median(x) + 2.5*mad(x)\n}\n\noutlierFilter <- function(df, var, x){\n  df %>%\n    filter(var > outlierBottom(x)) %>%\n    filter(var < outlierTop(x))\n}\n\noutlierFilter <- function(df, x){\n  # Column to analyze:\n  colName <- enquo(x)\n  # Get values vector:\n  values <- df %>% \n    select(!!colName) %>%\n    filter((!!colName) < 1000) %>%\n    unlist(use.names = FALSE)\n  # Filter:\n  df %>%\n    filter(!is.na((!!colName))) %>%\n    filter(\n      (!!colName) > median(values) - 2.5*mad(values)) %>%\n    filter(\n      (!!colName) < median(values) + 2.5*mad(values)\n      )\n}\n\n# add data ----------------------------------------------------------------\n\n\n# captures\n\ncaptures <-\n  suppressWarnings(\n    read_csv('nocaReport/captureTable.csv') %>%\n      setNames(str_replace_all(names(.), 'Capture', '')) %>%\n      select(siteID, date, obs:bandNumber, mass:sex) %>%\n      mutate(tl  = as.numeric(tl))\n  ) %>%\n   mutate(region = addRegion(siteID)) %>%\n  filter(!region %in% c('Colorado', 'noData')) %>%\n  mutate(region = factor(\n    region,\n    levels = c('Gainesville', 'Atlanta', 'Raleigh', 'Washington, DC', 'Pittsburgh', 'Springfield'))\n    )\n\n# NOCA captures:\n\nnoca <-\n  captures %>%\n  filter(spp == 'NOCA')\n\n# Locations:\n\nlocations <-\n  read_csv('nocaReport/locationTable.csv') %>%\n  setNames(str_replace_all(names(.), 'Location', '')) %>%\n  select(siteID, long, lat)\n\n\n```\n\n<h1>Northern Cardinal data summary</h1>\n<hr>\n<br>\n<h2><b>Some capture summary statistics</b></h2>\n\n<div class = \"row\">\n<div class = \"column\" style = \"width:50%\">\n<ul>\n<li>Captures by type</li>\n<ul>\n<li>Band: \n```{r nBanded, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(enc == 'B') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Recapture: \n```{r nRecapped, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(enc == 'R') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n</ul>\n<li>Captures by age:</li>\n<ul>\n<li>Hatch year: \n```{r nHy, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(age %in% c('HY', 'L')) %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>After hatch year: \n```{r nAHY, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(age %in% c('AHY', 'ASY', 'SY')) %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Unknown: \n```{r nUnknown_age, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(age %in% c('noData', 'U')) %>%\n  nrow() %>%\n  cat()\n```\n</li>\n</ul>\n<li>Captures by sex:</li>\n<ul>\n<li>Female: \n```{r nFemale, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(sex  == 'F') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Male: \n```{r nMale, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(sex == 'M') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Unknown: \n```{r nUnknown_sex, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(sex %in% c('noData', 'U')) %>%\n  nrow() %>%\n  cat()\n```\n</li>\n</ul>\n</ul>\n</div>\n\n<div class = \"column\" style = \"width:50%\">\n<ul>\n<li>Captures by region:</li>\n<ul>\n<li>Atlanta, GA: \n```{r regions, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(region == 'Atlanta') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Gainesville, FL: \n```{r, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(region == 'Gainesville') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Pittsburgh, PA: \n```{r, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(region == 'Pittsburgh') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Raleigh, NC: \n```{r, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(region == 'Raleigh') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Springfield, MA: \n```{r, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(region == 'Springfield') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n<li>Washington, DC: \n```{r, echo = FALSE, results = 'asis'}\nnoca %>%\n  filter(region == 'Washington, DC') %>%\n  nrow() %>%\n  cat()\n```\n</li>\n</ul>\n</ul>\n</div>\n</div>\n\n<hr>\n<h2><b>Some summary plots</b></h2>\n\n```{r massPlot, echo = FALSE, results = 'asis', fig.width = 8, fig.asp = .5}\nnoca %>%\n  filter(sex %in% c('M', 'F')) %>%\n  outlierFilter(mass) %>%\n  ggplot(aes(x = region, y = mass)) +\n  geom_boxplot(aes(fill = region)) +\n  facet_wrap(~sex) +\n  coord_flip() +\n   labs(title = 'Northern Cardinal mass by region',\n       x = 'Mass (g)',\n       y = 'Region') +\n  scale_y_continuous(expand = c(0,0),\n                     limits = c(30, 55)) +\n  theme_bw() +\n  theme(\n    panel.spacing.x = unit(1, \"lines\")\n  )\n```\n<br>\n```{r wingPlot, echo = FALSE, results = 'asis', fig.width = 8, fig.asp = .5}\nnoca %>%\n  filter(sex %in% c('M', 'F')) %>%\n  outlierFilter(wing) %>%\n  mutate(sex = factor(sex, labels = c('Female', 'Male'))) %>%\n  ggplot(aes(x = region, y = wing)) +\n  geom_boxplot(aes(fill = region)) +\n  facet_wrap(~sex) +\n  labs(title = 'Northern Cardinal wing chord length by region',\n       x = 'Wing chord (mm)',\n       y = 'Region') +\n  coord_flip() +\n  scale_y_continuous(expand = c(0,0),\n                     limits = c(80, 100)) +\n  theme_bw() +\n  theme(\n    panel.spacing.x = unit(1, \"lines\")\n  )\n```\n<br>\n```{r tailPlot, echo = FALSE, results = 'asis', fig.width = 8, fig.asp = .5}\nnoca %>%\n  filter(sex %in% c('M', 'F')) %>%\n  outlierFilter(tl) %>%\n  mutate(sex = factor(sex, labels = c('Female', 'Male'))) %>%\n  ggplot(aes(x = region, y = tl)) +\n  geom_boxplot(aes(fill = region)) +\n  facet_wrap(~sex) +\n  labs(title = 'Northern Cardinal tail length by region',\n       x = 'Tail (mm)',\n       y = 'Region') +\n  coord_flip() +\n  scale_y_continuous(expand = c(0,0),\n                     limits = c(80, 120)) +\n  theme_bw() +\n  theme(\n    panel.spacing.x = unit(1, \"lines\")\n  )\n```\n<br>\n```{r massWing, echo = FALSE, results = 'asis', fig.width = 8, fig.asp = .5}\n\nnoca %>%\n  filter(sex %in% c('M', 'F')) %>%\n  outlierFilter(mass) %>%\n  outlierFilter(wing) %>%\n  mutate(sex = factor(sex, labels = c('Female', 'Male'))) %>%\n  ggplot(aes(x = mass, y = wing)) +\n  geom_point(aes(color = region), alpha = 0.2) +\n  stat_smooth(aes(color = region, fill = region), method = 'glm') +\n  facet_wrap(~sex) +\n  labs(title = 'Northern Cardinal mass:wing by region',\n       x = 'Mass (g)',\n       y = 'Wing (mm)') +\n  theme_bw() +\n  theme(\n    panel.spacing.x = unit(1, \"lines\")\n  )\n```\n\n\n",
    "created" : 1521288766877.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "153849525",
    "id" : "B7ED6850",
    "lastKnownWriteTime" : 1521296816,
    "last_content_update" : 1521296816892,
    "path" : "C:/Users/Guest user/gits/Nestwatch/summarizingData/nocaReport.Rmd",
    "project_path" : "summarizingData/nocaReport.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}