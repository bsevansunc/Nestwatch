{
    "collab_server" : "",
    "contents" : "\n# set up ------------------------------------------------------------------\n\nlibrary(tidyverse)\n\n\n# functions ---------------------------------------------------------------\n\n# Function to add region to a plot (based on siteId field):\n\naddRegion <- function(x){\n  xState <- str_sub(x, start = -3, end = -2)\n  case_when(\n    xState == 'GA' ~ 'Atlanta',\n    xState == 'CO' ~ 'Colorado',\n    xState == 'FL' ~ 'Gainesville',\n    xState == 'NC' ~ 'Raleigh',\n    xState == 'PA' ~ 'Pittsburgh',\n    xState == 'MA' ~ 'Springfield',\n    xState %in% c('MD','DC', 'VA') ~ 'Washington, DC',\n    TRUE ~ 'noData'\n  )\n}\n\n# Outlier functions:\n\n\noutlierBottom <- function(x){\n  median(x) - 2.5*mad(x)\n}\n\noutlierTop <- function(x){\n  median(x) + 2.5*mad(x)\n}\n\noutlierFilter <- function(df, var, x){\n  df %>%\n    filter(var > outlierBottom(x)) %>%\n    filter(var < outlierTop(x))\n}\n\noutlierFilter <- function(df, x){\n  # Column to analyze:\n  colName <- enquo(x)\n  # Get values vector:\n  values <- df %>% \n    select(!!colName) %>%\n    filter((!!colName) < 1000) %>%\n    unlist(use.names = FALSE)\n  # Filter:\n  df %>%\n    filter(!is.na((!!colName))) %>%\n    filter(\n      (!!colName) > median(values) - 2.5*mad(values)) %>%\n    filter(\n      (!!colName) < median(values) + 2.5*mad(values)\n      )\n}\n\n\n# add data ----------------------------------------------------------------\n\n# captures:\n\ncaptures <-\n  suppressWarnings(\n    read_csv('data/databaseBackup_2018-02-01/captureTable.csv') %>%\n      setNames(str_replace_all(names(.), 'Capture', '')) %>%\n      select(siteID, date, obs:bandNumber, mass:sex) %>%\n      mutate(tl  = as.numeric(tl))\n  ) %>%\n  mutate(region = addRegion(siteID)) %>%\n  filter(!region %in% c('Colorado', 'noData')) %>%\n  mutate(region = factor(\n    region,\n    levels = c('Gainesville', 'Atlanta', 'Raleigh', 'Washington, DC', 'Pittsburgh', 'Springfield'))\n    )\n\ncaptures <-\n  suppressWarnings(\n    read_csv('nocaReport/captureTable.csv') %>%\n      setNames(str_replace_all(names(.), 'Capture', '')) %>%\n      select(siteID, date, obs:bandNumber, mass:sex) %>%\n      mutate(tl  = as.numeric(tl))\n  )\n\n# locations:\n\nlocations <-\n  read_csv('data/databaseBackup_2018-02-01/locationTable.csv') %>%\n  setNames(str_replace_all(names(.), 'Location', '')) %>%\n  select(siteID, long, lat)\n\nnoca <-\n  captures %>%\n  filter(spp == 'NOCA')\n\n\n# plotting ----------------------------------------------------------------\n\n# Mass bean plot:\n\nnoca %>%\n  filter(!sex %in% c('noData', 'U')) %>%\n  outlierFilter(mass) %>% \n  ggplot(aes(x = sex, y = mass)) +\n  geom_violin() +\n  coord_flip()\n\n# Mass by region:\n\nnoca %>%\n  filter(sex %in% c('M', 'F')) %>%\n  outlierFilter(mass) %>%\n  mutate(region = addRegion(siteID)) %>%\n  ggplot(aes(x = region, y = mass)) +\n  geom_boxplot(aes(fill = sex)) +\n  coord_flip() +\n  theme_bw()\n\n# Tail by region:\n\nnoca %>%\n  mutate(region = addRegion(siteID)) %>%\n  mutate(tl = as.numeric(tl)) %>%\n  filter(sex %in% c('M', 'F')) %>%\n  outlierFilter(tl) %>%\n  mutate(sex = factor(sex, labels = c('Female', 'Male'))) %>%\n  ggplot(aes(x = region, y = tl)) +\n  geom_boxplot(aes(fill = region)) +\n  facet_wrap(~sex) +\n  labs(title = 'Northern Cardinal tail length by region',\n       x = 'Tail (mm)',\n       y = 'Region') +\n  coord_flip() +\n  scale_y_continuous(expand = c(0,0),\n                     limits = c(80, 120)) +\n  theme_bw() +\n  theme(\n    panel.spacing.x = unit(1, \"lines\")\n  )\n\n# Mass by wing:\n\nnoca %>%\n  mutate(region = addRegion(siteID)) %>%\n  filter(sex %in% c('M', 'F')) %>%\n  outlierFilter(mass) %>%\n  outlierFilter(wing) %>%\n  mutate(sex = factor(sex, labels = c('Female', 'Male'))) %>%\n  ggplot(aes(x = wing, y = mass)) +\n  geom_point(aes(color = region), alpha = 0.2) +\n  stat_smooth(aes(color = region, fill = region), method = 'loess') +\n  facet_wrap(~sex) +\n  labs(title = 'Northern Cardinal tail length by region',\n       x = 'Tail (mm)',\n       y = 'Region') +\n  coord_flip() +\n  # scale_y_continuous(expand = c(0,0),\n  #                    limits = c(80, 120)) +\n  theme_bw() +\n  theme(\n    panel.spacing.x = unit(1, \"lines\")\n  )\n\n\n# some models -------------------------------------------------------------\n\nnoca4var <-\n  noca %>%\n  mutate(region = addRegion(siteID)) %>%\n  mutate(tl = as.numeric(tl)) %>%\n  filter(tl < 200, mass < 200, wing < 200) %>%\n  filter(\n    between(tl, outlierBottom(tl), outlierTop(tl)),\n    between(mass, outlierBottom(mass), outlierTop(mass)),\n    between(wing, outlierBottom(wing), outlierTop(wing))\n  ) %>%\n  na.omit\n\nnocaSe_across <-\n  noca4var %>%\n  group_by(region) %>%\n  summarize(\n    mass_sd = sd(mass)/sqrt(length(mass)),\n    wing_sd = sd(wing)/sqrt(length(wing)),\n    tl_sd = sd(tl)/sqrt(length(tl))\n  ) %>%\n  gather(key = measure, value = sd, mass_sd:tl_sd) %>%\n  mutate(measure = str_replace_all(measure, '_sd', ''))\n\nnocaRecap <- \n  noca4var %>%\n  group_by(region, bandNumber) %>%\n  mutate(n = n()) %>%\n  filter(n > 1) %>%\n  summarize(\n    mass = sd(mass)/sqrt(length(mass)),\n    wing = sd(wing)/sqrt(length(wing)),\n    tl = sd(tl)/sqrt(length(tl))\n  ) %>%\n  na.omit %>%\n  gather(key = measure, value = mn, mass:tl) %>%\n  group_by(region, measure) %>%\n  summarize(\n    mean_Var = mean(mn),\n    se_Var = sd(mn)/sqrt(length(unique(mn)))\n  )\n\nnocaSe_across %>%\n  left_join(nocaRecap, by = c('region', 'measure'))\n\ncaptures %>%\n  filter(spp == 'NOCA') %>%\n  mutate(region = addRegion(siteID)) %>%\n  mutate(tl = as.numeric(tl)) %>%\n  filter(tl < 200, mass < 200, wing < 200) %>%\n  filter(\n    between(tl, outlierBottom(tl), outlierTop(tl)),\n    between(mass, outlierBottom(mass), outlierTop(mass)),\n    between(wing, outlierBottom(wing), outlierTop(wing))\n  ) %>%\n  na.omit %>%\n  filter(obs != 'noData') %>%\n  do(fit = lm(wing ~ obs, data= .)) %>%\n  broom::glance(fit)\n  \n\n  \n\n\n  \nnoca_across %>%\n  ggplot(aes(x = measure, y = se)) +\n  geom_boxplot(aes(color = region),\n               position = position_dodge(width = .5),\n               size = 1) +\n  geom_point(data = nocaRecap %>% group_by(region, measure) %>% summarize(se = mean(mn)),\n             position = position_dodge(width = .5),\n             aes(x = measure, y = se, color = region))\n  theme_bw()\n  \n",
    "created" : 1521288769531.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3904540547",
    "id" : "39AEE526",
    "lastKnownWriteTime" : 1521462625,
    "last_content_update" : 1521462625414,
    "path" : "C:/Users/Guest user/gits/Nestwatch/summarizingData/nocaSummary_source.R",
    "project_path" : "summarizingData/nocaSummary_source.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}